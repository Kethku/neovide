use super::unsupported_key;
use super::Keypress;

use skulpin::winit::event::VirtualKeyCode as Keycode;

/// Maps winit keyboard events to Vim tokens
pub fn handle_qwerty_layout(
    keycode: Keycode,
    shift: bool,
    ctrl: bool,
    alt: bool,
) -> Option<Keypress<'static>> {
    let special = |text| {
        Some(Keypress::new(text, true, shift, ctrl, alt))
    };
    let normal = |text| {
        Some(Keypress::new(text, false, shift, ctrl, alt))
    };
    let partial = |text| {
        Some(Keypress::new(text, false, false, ctrl, alt))
    };
    match (keycode, shift) {
        (Keycode::Back, _) => special("BS"),
        (Keycode::Tab, _) => special("Tab"),
        (Keycode::Return, _) => special("Enter"),
        (Keycode::Escape, _) => special("Esc"),
        (Keycode::Space, _) => normal(" "),
        (Keycode::Apostrophe, false) => partial("'"),
        (Keycode::Apostrophe, true) => partial("\""),
        (Keycode::Comma, false) => normal(","),
        (Keycode::Comma, true) => normal("<"),
        (Keycode::Minus, false) => partial("-"),
        (Keycode::Minus, true) => partial("_"),
        (Keycode::Period, false) => partial("."),
        (Keycode::Period, true) => partial(">"),
        (Keycode::Slash, false) => partial("/"),
        (Keycode::Slash, true) => partial("?"),
        (Keycode::Key0, false) => normal("0"),
        (Keycode::Key0, true) => special(")"),
        (Keycode::Key1, false) => normal("1"),
        (Keycode::Key1, true) => special("!"),
        (Keycode::Key2, false) => partial("2"),
        (Keycode::Key2, true) => partial("@"),
        (Keycode::Key3, false) => partial("3"),
        (Keycode::Key3, true) => partial("#"),
        (Keycode::Key4, false) => partial("4"),
        (Keycode::Key4, true) => partial("$"),
        (Keycode::Key5, false) => partial("5"),
        (Keycode::Key5, true) => partial("%"),
        (Keycode::Key6, false) => partial("6"),
        (Keycode::Key6, true) => partial("^"),
        (Keycode::Key7, false) => partial("7"),
        (Keycode::Key7, true) => partial("&"),
        (Keycode::Key8, false) => partial("8"),
        (Keycode::Key8, true) => partial("*"),
        (Keycode::Key9, false) => partial("9"),
        // Note: code originally had ( as a special character but this doens't seem to be necessary
        (Keycode::Key9, true) => partial("("),
        (Keycode::Colon, _) => normal(":"),
        (Keycode::Semicolon, false) => partial(";"),
        (Keycode::Semicolon, true) => partial(":"),
        (Keycode::Equals, false) => partial("="),
        (Keycode::Equals, true) => partial("+"),
        (Keycode::At, _) => normal("@"),
        (Keycode::LBracket, false) => partial("["),
        (Keycode::LBracket, true) => partial("{"),
        (Keycode::Backslash, false) => partial("\\"),
        (Keycode::Backslash, true) => partial("|"),
        (Keycode::RBracket, false) => partial("]"),
        (Keycode::RBracket, true) => partial("}"),
        (Keycode::Caret, _) => normal("^"),
        (Keycode::Grave, false) => partial("`"),
        (Keycode::Grave, true) => partial("~"),
        (Keycode::A, _) => normal("a"),
        (Keycode::B, _) => normal("b"),
        (Keycode::C, _) => normal("c"),
        (Keycode::D, _) => normal("d"),
        (Keycode::E, _) => normal("e"),
        (Keycode::F, _) => normal("f"),
        (Keycode::G, _) => normal("g"),
        (Keycode::H, _) => normal("h"),
        (Keycode::I, _) => normal("i"),
        (Keycode::J, _) => normal("j"),
        (Keycode::K, _) => normal("k"),
        (Keycode::L, _) => normal("l"),
        (Keycode::M, _) => normal("m"),
        (Keycode::N, _) => normal("n"),
        (Keycode::O, _) => normal("o"),
        (Keycode::P, _) => normal("p"),
        (Keycode::Q, _) => normal("q"),
        (Keycode::R, _) => normal("r"),
        (Keycode::S, _) => normal("s"),
        (Keycode::T, _) => normal("t"),
        (Keycode::U, _) => normal("u"),
        (Keycode::V, _) => normal("v"),
        (Keycode::W, _) => normal("w"),
        (Keycode::X, _) => normal("x"),
        (Keycode::Y, _) => normal("y"),
        (Keycode::Z, _) => normal("z"),
        (Keycode::Delete, _) => special("Delete"),
        (Keycode::F1, _) => special("F1"),
        (Keycode::F2, _) => special("F2"),
        (Keycode::F3, _) => special("F3"),
        (Keycode::F4, _) => special("F4"),
        (Keycode::F5, _) => special("F5"),
        (Keycode::F6, _) => special("F6"),
        (Keycode::F7, _) => special("F7"),
        (Keycode::F8, _) => special("F8"),
        (Keycode::F9, _) => special("F9"),
        (Keycode::F10, _) => special("F10"),
        (Keycode::F11, _) => special("F11"),
        (Keycode::F12, _) => special("F12"),
        (Keycode::Snapshot, _) => unsupported_key(Keycode::Snapshot),
        (Keycode::Pause, _) => unsupported_key(Keycode::Pause),
        (Keycode::Insert, _) => special("Insert"),
        (Keycode::Home, _) => special("Home"),
        (Keycode::PageUp, _) => special("PageUp"),
        (Keycode::End, _) => special("End"),
        (Keycode::PageDown, _) => special("PageDown"),
        (Keycode::Right, _) => special("Right"),
        (Keycode::Left, _) => special("Left"),
        (Keycode::Down, _) => special("Down"),
        (Keycode::Up, _) => special("Up"),
        (Keycode::Numpad0, _) => normal("0"),
        (Keycode::Numpad1, _) => normal("1"),
        (Keycode::Numpad2, _) => normal("2"),
        (Keycode::Numpad3, _) => normal("3"),
        (Keycode::Numpad4, _) => normal("4"),
        (Keycode::Numpad5, _) => normal("5"),
        (Keycode::Numpad6, _) => normal("6"),
        (Keycode::Numpad7, _) => normal("7"),
        (Keycode::Numpad8, _) => normal("8"),
        (Keycode::Numpad9, _) => normal("9"),
        (Keycode::Apps, _) => unsupported_key(Keycode::Apps),
        (Keycode::Power, _) => unsupported_key(Keycode::Power),
        (Keycode::F13, _) => special("F13"),
        (Keycode::F14, _) => special("F14"),
        (Keycode::F15, _) => special("F15"),
        (Keycode::F16, _) => special("F16"),
        (Keycode::F17, _) => special("F17"),
        (Keycode::F18, _) => special("F18"),
        (Keycode::F19, _) => special("F19"),
        (Keycode::F20, _) => special("F20"),
        (Keycode::F21, _) => special("F21"),
        (Keycode::F22, _) => special("F22"),
        (Keycode::F23, _) => special("F23"),
        (Keycode::F24, _) => special("F24"),
        (Keycode::Cut, _) => unsupported_key(Keycode::Cut),
        (Keycode::Copy, _) => unsupported_key(Keycode::Copy),
        (Keycode::Paste, _) => unsupported_key(Keycode::Paste),
        (Keycode::Mute, _) => unsupported_key(Keycode::Mute),
        (Keycode::VolumeUp, _) => unsupported_key(Keycode::VolumeUp),
        (Keycode::VolumeDown, _) => unsupported_key(Keycode::VolumeDown),
        (Keycode::Sysrq, _) => unsupported_key(Keycode::Sysrq),
        (Keycode::LControl, _) => None,
        (Keycode::LShift, _) => None,
        (Keycode::LAlt, _) => None,
        (Keycode::RControl, _) => None,
        (Keycode::RShift, _) => None,
        (Keycode::RAlt, _) => None,
        (Keycode::MediaStop, _) => unsupported_key(Keycode::MediaStop),
        (Keycode::MediaSelect, _) => unsupported_key(Keycode::MediaSelect),
        (Keycode::Calculator, _) => unsupported_key(Keycode::Calculator),
        (Keycode::MyComputer, _) => unsupported_key(Keycode::MyComputer),
        (Keycode::WebSearch, _) => unsupported_key(Keycode::WebSearch),
        (Keycode::WebHome, _) => unsupported_key(Keycode::WebHome),
        (Keycode::WebBack, _) => unsupported_key(Keycode::WebBack),
        (Keycode::WebForward, _) => unsupported_key(Keycode::WebForward),
        (Keycode::NavigateBackward, _) => unsupported_key(Keycode::NavigateBackward),
        (Keycode::NavigateForward, _) => unsupported_key(Keycode::NavigateForward),
        (Keycode::WebStop, _) => unsupported_key(Keycode::WebStop),
        (Keycode::WebRefresh, _) => unsupported_key(Keycode::WebRefresh),
        (Keycode::Sleep, _) => unsupported_key(Keycode::Sleep),
        _ => None,
    }
}
